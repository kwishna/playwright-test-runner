{
  "config": {
    "configFile": "F:\\ABD\\Codes\\VSCodes\\Automations\\PlayWright\\playwright-test-runner\\playwright.config.ts",
    "rootDir": "F:/ABD/Codes/VSCodes/Automations/PlayWright/playwright-test-runner/tests",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": "F:\\ABD\\Codes\\VSCodes\\Automations\\PlayWright\\playwright-test-runner\\global-setup.ts",
    "globalTeardown": "F:\\ABD\\Codes\\VSCodes\\Automations\\PlayWright\\playwright-test-runner\\global-teardown.ts",
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "browserName": "chrome",
      "time": "09/09/2023 03:04:50",
      "machine": "x86_64",
      "platform": "win32",
      "arch": "x64",
      "totalTime": 14314.75,
      "actualWorkers": 3
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "dot",
        null
      ],
      [
        "line",
        null
      ],
      [
        "list",
        null
      ],
      [
        "html",
        {
          "outputFile": "report.html",
          "outputFolder": "./test-results"
        }
      ],
      [
        "junit",
        {
          "outputFile": "junit.xml",
          "outputFolder": "./test-results"
        }
      ],
      [
        "json",
        {
          "outputFile": "test-results.json",
          "outputFolder": "./test-results"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "F:/ABD/Codes/VSCodes/Automations/PlayWright/playwright-test-runner/output",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "browserName": "chrome",
          "time": "09/09/2023 03:04:50",
          "machine": "x86_64",
          "platform": "win32",
          "arch": "x64",
          "totalTime": 14314.75,
          "actualWorkers": 3
        },
        "id": "Automated Playwright Tests",
        "name": "Automated Playwright Tests",
        "testDir": "F:/ABD/Codes/VSCodes/Automations/PlayWright/playwright-test-runner/tests",
        "testIgnore": [
          "**/test-assets/**"
        ],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "version": "1.37.1",
    "workers": 4,
    "webServer": null
  },
  "suites": [
    {
      "title": "demo-todo-app.spec.ts",
      "file": "demo-todo-app.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "New Todo",
          "file": "demo-todo-app.spec.ts",
          "line": 13,
          "column": 6,
          "specs": [
            {
              "title": "should allow me to add todo items",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Automated Playwright Tests",
                  "projectName": "Automated Playwright Tests",
                  "results": [
                    {
                      "workerIndex": 1,
                      "status": "passed",
                      "duration": 8979,
                      "errors": [],
                      "stdout": [],
                      "stderr": [
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> selectors.setTestIdAttribute started \u001b[38;5;45m+0ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> browserType.launch started \u001b[38;5;45m+21ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= selectors.setTestIdAttribute succeeded \u001b[38;5;45m+20ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= browserType.launch succeeded \u001b[38;5;45m+2s\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> browser.newContext started \u001b[38;5;45m+8ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= browser.newContext succeeded \u001b[38;5;45m+23ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> tracing.start started \u001b[38;5;45m+8ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= tracing.start succeeded \u001b[38;5;45m+13ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> browserContext.newPage started \u001b[38;5;45m+11ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= browserContext.newPage succeeded \u001b[38;5;45m+3s\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> page.goto started \u001b[38;5;45m+8ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mnavigating to \"https://demo.playwright.dev/todomvc\", waiting until \"load\" \u001b[38;5;45m+36ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  \"commit\" event fired \u001b[38;5;45m+453ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  navigated to \"https://demo.playwright.dev/todomvc/\" \u001b[38;5;45m+1ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  navigated to \"https://demo.playwright.dev/todomvc/#/\" \u001b[38;5;45m+2s\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  \"load\" event fired \u001b[38;5;45m+151ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  \"domcontentloaded\" event fired \u001b[38;5;45m+2ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= page.goto succeeded \u001b[38;5;45m+86ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> locator.fill started \u001b[38;5;45m+12ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByPlaceholder('What needs to be done?') \u001b[38;5;45m+17ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  \"networkidle\" event fired \u001b[38;5;45m+41ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <input class=\"new-todo\" placeholder=\"What needs to be d…/> \u001b[38;5;45m+106ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0melementHandle.fill(\"buy some cheese\") \u001b[38;5;45m+7ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  waiting for element to be visible, enabled and editable \u001b[38;5;45m+17ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  element is visible, enabled and editable \u001b[38;5;45m+30ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= locator.fill succeeded \u001b[38;5;45m+105ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> locator.press started \u001b[38;5;45m+3ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByPlaceholder('What needs to be done?') \u001b[38;5;45m+13ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <input class=\"new-todo\" placeholder=\"What needs to be d…/> \u001b[38;5;45m+8ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0melementHandle.press(\"Enter\") \u001b[38;5;45m+3ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= locator.press succeeded \u001b[38;5;45m+269ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> expect.toHaveText started \u001b[38;5;45m+21ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mexpect.toHaveText with timeout 10000ms \u001b[38;5;45m+29ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByTestId('todo-title') \u001b[38;5;45m+1ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to 1 element \u001b[38;5;45m+9ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= expect.toHaveText succeeded \u001b[38;5;45m+5ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> locator.fill started \u001b[38;5;45m+3ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByPlaceholder('What needs to be done?') \u001b[38;5;45m+13ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <input class=\"new-todo\" placeholder=\"What needs to be d…/> \u001b[38;5;45m+30ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0melementHandle.fill(\"feed the cat\") \u001b[38;5;45m+74ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  waiting for element to be visible, enabled and editable \u001b[38;5;45m+51ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  element is visible, enabled and editable \u001b[38;5;45m+80ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= locator.fill succeeded \u001b[38;5;45m+88ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> locator.press started \u001b[38;5;45m+2ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByPlaceholder('What needs to be done?') \u001b[38;5;45m+14ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <input class=\"new-todo\" placeholder=\"What needs to be d…/> \u001b[38;5;45m+25ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0melementHandle.press(\"Enter\") \u001b[38;5;45m+16ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= locator.press succeeded \u001b[38;5;45m+97ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> expect.toHaveText started \u001b[38;5;45m+5ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mexpect.toHaveText with timeout 10000ms \u001b[38;5;45m+9ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByTestId('todo-title') \u001b[38;5;45m+1ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to 2 elements \u001b[38;5;45m+5ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= expect.toHaveText succeeded \u001b[38;5;45m+4ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> page.waitForFunction started \u001b[38;5;45m+2ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= page.waitForFunction succeeded \u001b[38;5;45m+57ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mtaking page screenshot \u001b[38;5;45m+566ms\u001b[0m\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2023-09-08T21:37:47.552Z",
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "F:\\ABD\\Codes\\VSCodes\\Automations\\PlayWright\\playwright-test-runner\\output\\demo-todo-app-New-Todo-should-allow-me-to-add-todo-items-Automated-Playwright-Tests\\test-finished-1.png"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "F:\\ABD\\Codes\\VSCodes\\Automations\\PlayWright\\playwright-test-runner\\output\\demo-todo-app-New-Todo-should-allow-me-to-add-todo-items-Automated-Playwright-Tests\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "849da1cee0c412ce5534-bebd59b1eeb273ba2b2f",
              "file": "demo-todo-app.spec.ts",
              "line": 14,
              "column": 7
            },
            {
              "title": "should clear text input field when an item is added",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Automated Playwright Tests",
                  "projectName": "Automated Playwright Tests",
                  "results": [
                    {
                      "workerIndex": 2,
                      "status": "passed",
                      "duration": 5804,
                      "errors": [],
                      "stdout": [],
                      "stderr": [
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> selectors.setTestIdAttribute started \u001b[38;5;45m+0ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> browserType.launch started \u001b[38;5;45m+13ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= selectors.setTestIdAttribute succeeded \u001b[38;5;45m+21ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= browserType.launch succeeded \u001b[38;5;45m+6s\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> browser.newContext started \u001b[38;5;45m+11ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= browser.newContext succeeded \u001b[38;5;45m+33ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> tracing.start started \u001b[38;5;45m+8ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= tracing.start succeeded \u001b[38;5;45m+5ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> browserContext.newPage started \u001b[38;5;45m+18ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= browserContext.newPage succeeded \u001b[38;5;45m+464ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> page.goto started \u001b[38;5;45m+15ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mnavigating to \"https://demo.playwright.dev/todomvc\", waiting until \"load\" \u001b[38;5;45m+32ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  \"commit\" event fired \u001b[38;5;45m+263ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  navigated to \"https://demo.playwright.dev/todomvc/\" \u001b[38;5;45m+2ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  navigated to \"https://demo.playwright.dev/todomvc/#/\" \u001b[38;5;45m+2s\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  \"load\" event fired \u001b[38;5;45m+92ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  \"domcontentloaded\" event fired \u001b[38;5;45m+1ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  \"networkidle\" event fired \u001b[38;5;45m+16ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= page.goto succeeded \u001b[38;5;45m+110ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> locator.fill started \u001b[38;5;45m+19ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByPlaceholder('What needs to be done?') \u001b[38;5;45m+24ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <input class=\"new-todo\" placeholder=\"What needs to be d…/> \u001b[38;5;45m+46ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0melementHandle.fill(\"buy some cheese\") \u001b[38;5;45m+4ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  waiting for element to be visible, enabled and editable \u001b[38;5;45m+10ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  element is visible, enabled and editable \u001b[38;5;45m+22ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= locator.fill succeeded \u001b[38;5;45m+75ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> locator.press started \u001b[38;5;45m+4ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByPlaceholder('What needs to be done?') \u001b[38;5;45m+20ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <input class=\"new-todo\" placeholder=\"What needs to be d…/> \u001b[38;5;45m+39ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0melementHandle.press(\"Enter\") \u001b[38;5;45m+5ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= locator.press succeeded \u001b[38;5;45m+498ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> expect.toBeEmpty started \u001b[38;5;45m+26ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mexpect.toBeEmpty with timeout 10000ms \u001b[38;5;45m+17ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByPlaceholder('What needs to be done?') \u001b[38;5;45m+0ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <input class=\"new-todo\" placeholder=\"What needs to be d…/> \u001b[38;5;45m+27ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= expect.toBeEmpty succeeded \u001b[38;5;45m+15ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> page.waitForFunction started \u001b[38;5;45m+5ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= page.waitForFunction succeeded \u001b[38;5;45m+69ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mtaking page screenshot \u001b[38;5;45m+214ms\u001b[0m\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2023-09-08T21:37:47.563Z",
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "F:\\ABD\\Codes\\VSCodes\\Automations\\PlayWright\\playwright-test-runner\\output\\demo-todo-app-New-Todo-should-clear-text-input-field-when-an-item-is-added-Automated-Playwright-Tests\\test-finished-1.png"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "F:\\ABD\\Codes\\VSCodes\\Automations\\PlayWright\\playwright-test-runner\\output\\demo-todo-app-New-Todo-should-clear-text-input-field-when-an-item-is-added-Automated-Playwright-Tests\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "849da1cee0c412ce5534-e670ea7e8c6d680568dd",
              "file": "demo-todo-app.spec.ts",
              "line": 40,
              "column": 7
            },
            {
              "title": "should append new items to the bottom of the list",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Automated Playwright Tests",
                  "projectName": "Automated Playwright Tests",
                  "results": [
                    {
                      "workerIndex": 3,
                      "status": "passed",
                      "duration": 9310,
                      "errors": [],
                      "stdout": [],
                      "stderr": [
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> selectors.setTestIdAttribute started \u001b[38;5;45m+0ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> browserType.launch started \u001b[38;5;45m+22ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= selectors.setTestIdAttribute succeeded \u001b[38;5;45m+30ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= browserType.launch succeeded \u001b[38;5;45m+2s\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> browser.newContext started \u001b[38;5;45m+8ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= browser.newContext succeeded \u001b[38;5;45m+48ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> tracing.start started \u001b[38;5;45m+10ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= tracing.start succeeded \u001b[38;5;45m+8ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> browserContext.newPage started \u001b[38;5;45m+10ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= browserContext.newPage succeeded \u001b[38;5;45m+3s\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> page.goto started \u001b[38;5;45m+17ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mnavigating to \"https://demo.playwright.dev/todomvc\", waiting until \"load\" \u001b[38;5;45m+62ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  \"commit\" event fired \u001b[38;5;45m+528ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  navigated to \"https://demo.playwright.dev/todomvc/\" \u001b[38;5;45m+1ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  navigated to \"https://demo.playwright.dev/todomvc/#/\" \u001b[38;5;45m+2s\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  \"load\" event fired \u001b[38;5;45m+156ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  \"domcontentloaded\" event fired \u001b[38;5;45m+2ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= page.goto succeeded \u001b[38;5;45m+73ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> locator.fill started \u001b[38;5;45m+13ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  \"networkidle\" event fired \u001b[38;5;45m+17ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByPlaceholder('What needs to be done?') \u001b[38;5;45m+7ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <input class=\"new-todo\" placeholder=\"What needs to be d…/> \u001b[38;5;45m+140ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0melementHandle.fill(\"buy some cheese\") \u001b[38;5;45m+4ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  waiting for element to be visible, enabled and editable \u001b[38;5;45m+15ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  element is visible, enabled and editable \u001b[38;5;45m+40ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= locator.fill succeeded \u001b[38;5;45m+86ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> locator.press started \u001b[38;5;45m+2ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByPlaceholder('What needs to be done?') \u001b[38;5;45m+9ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <input class=\"new-todo\" placeholder=\"What needs to be d…/> \u001b[38;5;45m+14ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0melementHandle.press(\"Enter\") \u001b[38;5;45m+8ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= locator.press succeeded \u001b[38;5;45m+290ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> locator.fill started \u001b[38;5;45m+2ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByPlaceholder('What needs to be done?') \u001b[38;5;45m+30ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <input class=\"new-todo\" placeholder=\"What needs to be d…/> \u001b[38;5;45m+18ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0melementHandle.fill(\"feed the cat\") \u001b[38;5;45m+6ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  waiting for element to be visible, enabled and editable \u001b[38;5;45m+4ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  element is visible, enabled and editable \u001b[38;5;45m+19ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= locator.fill succeeded \u001b[38;5;45m+129ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> locator.press started \u001b[38;5;45m+4ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByPlaceholder('What needs to be done?') \u001b[38;5;45m+64ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <input class=\"new-todo\" placeholder=\"What needs to be d…/> \u001b[38;5;45m+28ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0melementHandle.press(\"Enter\") \u001b[38;5;45m+7ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= locator.press succeeded \u001b[38;5;45m+108ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> locator.fill started \u001b[38;5;45m+3ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByPlaceholder('What needs to be done?') \u001b[38;5;45m+11ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <input class=\"new-todo\" placeholder=\"What needs to be d…/> \u001b[38;5;45m+39ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0melementHandle.fill(\"book a doctors appointment\") \u001b[38;5;45m+6ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  waiting for element to be visible, enabled and editable \u001b[38;5;45m+7ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  element is visible, enabled and editable \u001b[38;5;45m+15ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= locator.fill succeeded \u001b[38;5;45m+95ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> locator.press started \u001b[38;5;45m+3ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByPlaceholder('What needs to be done?') \u001b[38;5;45m+15ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <input class=\"new-todo\" placeholder=\"What needs to be d…/> \u001b[38;5;45m+9ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0melementHandle.press(\"Enter\") \u001b[38;5;45m+2ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= locator.press succeeded \u001b[38;5;45m+95ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> expect.toBeVisible started \u001b[38;5;45m+20ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mexpect.toBeVisible with timeout 10000ms \u001b[38;5;45m+71ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByText('3 items left') \u001b[38;5;45m+0ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <span class=\"todo-count\" data-testid=\"todo-count\">…</span> \u001b[38;5;45m+22ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= expect.toBeVisible succeeded \u001b[38;5;45m+12ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> expect.toHaveText started \u001b[38;5;45m+10ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mexpect.toHaveText with timeout 10000ms \u001b[38;5;45m+12ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByTestId('todo-count') \u001b[38;5;45m+0ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <span class=\"todo-count\" data-testid=\"todo-count\">…</span> \u001b[38;5;45m+10ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= expect.toHaveText succeeded \u001b[38;5;45m+16ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> expect.toContainText started \u001b[38;5;45m+10ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mexpect.toContainText with timeout 10000ms \u001b[38;5;45m+13ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByTestId('todo-count') \u001b[38;5;45m+1ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <span class=\"todo-count\" data-testid=\"todo-count\">…</span> \u001b[38;5;45m+5ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= expect.toContainText succeeded \u001b[38;5;45m+11ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> expect.toHaveText started \u001b[38;5;45m+7ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mexpect.toHaveText with timeout 10000ms \u001b[38;5;45m+26ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByTestId('todo-count') \u001b[38;5;45m+0ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to <span class=\"todo-count\" data-testid=\"todo-count\">…</span> \u001b[38;5;45m+29ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= expect.toHaveText succeeded \u001b[38;5;45m+6ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> expect.toHaveText started \u001b[38;5;45m+9ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mexpect.toHaveText with timeout 10000ms \u001b[38;5;45m+14ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mwaiting for getByTestId('todo-title') \u001b[38;5;45m+0ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m  locator resolved to 3 elements \u001b[38;5;45m+5ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= expect.toHaveText succeeded \u001b[38;5;45m+6ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m=> page.waitForFunction started \u001b[38;5;45m+6ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0m<= page.waitForFunction succeeded \u001b[38;5;45m+42ms\u001b[0m\n"
                        },
                        {
                          "text": "  \u001b[38;5;45;1mpw:api \u001b[0mtaking page screenshot \u001b[38;5;45m+426ms\u001b[0m\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2023-09-08T21:37:47.590Z",
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "F:\\ABD\\Codes\\VSCodes\\Automations\\PlayWright\\playwright-test-runner\\output\\demo-todo-app-New-Todo-should-append-new-items-to-the-bottom-of-the-list-Automated-Playwright-Tests\\test-finished-1.png"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "F:\\ABD\\Codes\\VSCodes\\Automations\\PlayWright\\playwright-test-runner\\output\\demo-todo-app-New-Todo-should-append-new-items-to-the-bottom-of-the-list-Automated-Playwright-Tests\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "849da1cee0c412ce5534-05b4ee746bb0be5f6e0c",
              "file": "demo-todo-app.spec.ts",
              "line": 53,
              "column": 7
            }
          ]
        }
      ]
    }
  ],
  "errors": []
}